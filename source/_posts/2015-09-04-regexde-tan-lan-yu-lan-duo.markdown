---
layout: post
title: "regex的贪婪与懒惰"
date: 2015-09-04 21:07:39 +0800
comments: true
categories: regex
tags: [regex, python]
styles: [data-table]
---

　　正则表达式有两种模式：**贪婪模式**与**懒惰模式**。


　　贪婪模式：匹配尽可能多的字符。

　　我们一般刚开始学习正则表达式使用到的都是贪婪模式下的表达。

　　比如：将** a.*b ** 应用于串 **“aabab”** ，它会匹配 “aabab”整个串。注意，其实整个串“aabab”中的子串“aab”和“ab”也是匹配的。这就是正则表达式的贪婪模式。


　　懒惰模式：匹配尽可能少的字符。

　　正则表达式用**?**来表示懒惰限定符。它要用在重复匹配限定符的后面。

　　重复匹配限定符：


代码 | 说明
-------- | ----
\* | 重复零次或更多次
\+ | 重复一次或更多次
? | 重复零次或一次
{n} | 重复n次
{n,} | 重复n次或更多次
{n,m} | 重复n到m次

<br/>
　　加入懒惰限定符的重复匹配限定符：　　

代码 | 说明
-------- | ----
\*? | 重复零次或更多次，但尽可能少重复
\+? | 重复一次或更多次，但尽可能少重复
?? | 重复零次或一次，但尽可能少重复
{n,}? | 重复n次或更多次，但尽可能少重复
{n,m}? | 重复n到m次，但尽可能少重复

<br/>
　　还是上面那个例子：将** a.*?b ** 应用于串 **“aabab”** ，它会匹配 “aab”这个子串（对应于原串的前三个字符）和 “ab”这个子串（对应于原串的最后两个字符）。注意：懒惰模式在匹配好了以后会记录该匹配串，如果还有剩余的字符，会继续往下匹配，直到结束，返回所有匹配成功的串。

　　实战例子: 在python的爬虫应用中，我们常常遇见需要在整个html页面中找到我们需要的内容，这时就要用到regex。比如我们想要找到所有的img标签中的src属性的内容：

```
<img pic_type="0" class="BDE_Image" src="http://imgsrc.baidu.com/forum/w%3D580/sign=294db374d462853592e0d229a0ee76f2/e732c895d143ad4b630e8f4683025aafa40f0611.jpg" pic_ext="bmp" height="328" width="560">
```

　　用到的正则表达式：

```
reg = r'src="(.+?\.jpg)" pic_ext'
```
　　注意，这里就运用了懒惰规则，如果写成这样：

```
reg = r'src="(.+\.jpg)" pic_ext'
```

　　如果有不止一个img标签的话，就会匹配第一个img标签的开始部分和最后一个img标签的结束部分的全部字符，这样就没有了意义。
　

　　上式中，“( )”中的内容表示待提取的字符。
  